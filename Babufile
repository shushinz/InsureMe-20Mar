pipeline {
    agent any
    
    tools {
        maven 'M2_HOME'
    }
    
    stages {
        stage('Git checkout') {
            steps {
                echo 'This is for cloning the gitrepo'
                git branch: 'main', url: 'https://github.com/shushinz/InsureMe-20Mar.git'
            }
        }
        
        stage('Create a Package') {
            steps {
                echo 'This will create a package using maven'
                sh 'mvn package'
            }
        }

        stage('Publish the HTML Reports') {
            steps {
                publishHTML(
                    allowMissing: false,
                    alwaysLinkToLastBuild: false,
                    keepAll: false,
                    reportDir: 'target/surefire-reports',
                    reportFiles: 'index.html',
                    reportName: 'HTML Report',
                    reportTitles: '',
                    useWrapperFileDirectly: true
                )
            }
        }
        
        stage('Create a Docker image from the Package Insure-Me.jar file') {
            steps {
                sh 'docker build -t cbabu85/insure-me-app:4.0 .'
            }
        }
        
        stage('Login to Dockerhub') {
            steps {  
                withCredentials([usernamePassword(credentialsId: 'dockerlogin', passwordVariable: 'dockerpass', usernameVariable: 'dockeruser')]) {
                    sh "docker login -u ${env.dockeruser} -p ${env.dockerpass}"
                }
            }
        }
        
        stage('Push the Docker image') {
            steps {
                sh 'docker push chan1903/insureme:4.0'
            }
        }
        
        stage('Ansible config and Deployment') {
            steps {
                ansiblePlaybook(
                    credentialsId: 'ansible-ssh',
                    disableHostKeyChecking: true,
                    installation: 'ansible',
                    inventory: '/etc/ansible/hosts',
                    playbook: 'ansible.yml',
                    vaultTmpPath: ''
                )
            }
        }
    }
}
